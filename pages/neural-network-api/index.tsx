import Head from "next/head";
import Navbar from "../components/navbar";
import Footer from "../components/footer";
import ProjectBanner from "../components/projects/projectBanner";
import ShowcaseSection from "../components/projects/showcaseSection";
import ProjectTechStack from "../components/projects/projectTechStack";
import InfoSectionPrimary from "../components/projects/infoSectionPrimary";
import InfoSectionSecondary from "../components/projects/infoSectionSecondary";

import Image from "next/image";
import st from "../../public/assets/images/stripes.svg";
import sq from "../../public/assets/images/square.svg";
import sc from "../../public/assets/images/scribble.svg";

import model from "../../public/assets/images/model.svg";
import processing from "../../public/assets/images/processing.svg";
import output from "../../public/assets/images/output.png";
import pgadmin from "../../public/assets/images/pgadmin.png";
import fastapi from "../../public/assets/images/fastapi.svg";

export default function Project() {
  const techStack = ["python", "fastapi", "pytorch", "postgresql"];
  return (
    <div>
      <Head>
        <title>James Vovos - Neural Network API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-hintedwhite-50 px-10 relative overflow-hidden">
        {/* Change these to only be pages (refactor components to only be components later) */}
        <section className="min-h-screen">
          <Navbar />
          <div>
            <span className="square">
              <Image
                src={sq}
                alt="Square"
                className="square absolute overflow-hidden"
              />
            </span>
            <span className="stripes">
              <Image
                src={st}
                alt="Stripes"
                className="stripes absolute overflow-hidden"
              />
            </span>
            <ProjectBanner
              title="Neural Network API"
              desc="Built a custom neural network model that can be trained via API. The idea behind it was initially a chatbot which evolved to become a NPC creator for games. The API was built using FastAPI and SQLAlchemy. The neural network was built using PyTorch, utilising 3 linear layers and a relu activation function."
              video="https://youtu.be/0yCwYWaZBHY"
            />
            <ProjectTechStack techStack={techStack} />
            <ShowcaseSection
              title="NEURAL NETWORK"
              desc="Created a feed forward neural network model with 3 linear layers and a relu activation function using PyTorch. This was an attempt to learn more about artificial intelligence, as well as explore PyTorch's open source library."
              image={model}
            />
            <span className="scribble">
              <Image
                src={sc}
                alt="Scribble"
                className="scribble absolute overflow-hidden"
              />
            </span>
            <InfoSectionSecondary
              title="AI CHAT"
              desc="The neural network model was built as a basic chatbot. The model selects an appropriate response based on the intents provided to it. For example: If the AI chatbot knows the intent behind the input 'Hi', it will assign and pick at random a response related to that intents 'tag'. In this case, the intents 'tag' would be under a 'greeting'."
              image={output}
            />
            <InfoSectionPrimary
              title="DATA PROCESSING"
              desc="The project focused on understanding how neural networks are trained and how to pre-process the data to achieve a desired output response from the model. This step involved processes such as tokenization, lemmatization, stemming and word vectors/bag of words functions."
              image={processing}
            />
            <InfoSectionSecondary
              title="DATABASE"
              desc="Designed and built a relational database model using PostgreSQL. The schema was designed to allow users to train their own AI chat model through an API, rather than a JSON or text file. This was originally built to create non-player characters (NPC's) powered by AI for games. The thought process behind this idea was that users would be able to create their own NPC's which would each have their own set of knowledge, voice style and attributes. Essentially, the NPC would only respond based on what it knew from it's knowledge base (which could be provided to it as 'Intents')."
              image={pgadmin}
            />
            <InfoSectionPrimary
              title="FASTAPI"
              desc="The API was built using FastAPI in Python, this library is known for having great documentation and high performance. The Pydantic library was also used to setup the database schemas for our AI model."
              image={fastapi}
            />
          </div>
          <div>
            <Footer />
          </div>
        </section>
      </main>
    </div>
  );
}
